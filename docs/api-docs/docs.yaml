openapi: 3.0.3
info:
  title: TheHive
  version: v1
  x-logo:
    url: /static/logo-thehive-doc.svg
    altText: TheHive Logo
tags:
- name: Case
  description: |2

    A case is ...

    #### Queries
    - Initial Queries:
      - `listCase`: list all the cases visible by the user
      - `getCase`: get a case by id or name - additional field `idOrName`
      - `countCase`: count the cases visible by the user, returns a number
    - Queries available on Cases:
      - `observables`
      - `tasks`
      - `assignableUsers`
      - `organisations`
      - `alerts`
      - `shares`
      - `procedures`
      - `linkedCases`
      - `attachments`
      - `similarAlerts`
      - `pages`
      - `comments`
    - Extra data:
      - `observableStats`
      - `taskStats`
      - `alerts`
      - `isOwner`
      - `shareCount`
      - `permissions`
      - `actionRequired`
      - `procedureCount`
      - `attachmentCount`
      - `similarAlerts`
      - `contributors`
      - `computed.handlingDuration`
      - `computed.handlingDurationInSeconds`
      - `computed.handlingDurationInMinutes`
      - `computed.handlingDurationInHours`
      - `computed.handlingDurationInDays`
      - `status`
- name: Alert
  description: |2


    ### Queries
    - Initial Queries:
      - `listAlert`: list alerts visible by the user in the org
      - `getAlert` : get an alert by id
      - `countAlert`: count all alerts
      - `countUnreadAlert`: count alerts with status new
      - `countImportedAlert`: count alerts imported into cases
    - Queries available on Alerts:
      - `observables`
      - `case`
      - `similarCases`
      - `similarAlerts`
      - `procedures`
      - `comments`
    - Extra data:
      - `similarCases`
      - `similarAlerts`
      - `importDate`
      - `caseNumber`
      - `status`
      - `procedureCount`
- name: Task
  description: |2

    A task can be linked to a Case or to a Case Template

    ### Queries
    - Initial Queries:
      - `listTask`: list tasks visible by the user in the current org
      - `getTask`: get task by id
      - `waitingTasks`: list tasks with status `Waiting` in the current org
      - `myTasks`: list tasks assigned to the current user in the current org
    - Queries available on Tasks
      - `assignableUsers`
      - `logs`
      - `case`
      - `caseTemplate`
      - `organisations`
      - `shares`
      - `inCase`: select only tasks linked to a case
    - Extra data:
      - `case`
      - `caseId`
      - `caseTemplate`
      - `caseTemplateId`
      - `isOwner`
      - `shareCount`
      - `actionRequired`
      - `actionRequiredMap`
- name: Observable
  description: |2

    ### Queries
    - Initial Queries:
      - `listObservable`
      - `getObservable`
    - Queries available on Observable
      - `similar`
      - `case`
      - `alert`
      - `shares`
    - Extra Data
      - `seen`
      - `shares`
      - `links`
      - `permissions`
      - `isOwner`
      - `shareCount`
- name: Comment
  description: |2

    ### Queries:
    - Initial Queries:
      - `listComment`
      - `getComment`
- name: Task Log
  description: "\n### Queries\n- Initial Queries: \n  - `listLog`\n  - `getLog`\n\
    - Extra Data:\n  - `case`\n  - `task`\n  - `taskId`\n  - `actionCount`\n"
- name: Timeline
- name: TTP
  description: |2

    ### Queries for Procedure
    - Initial Queries
      - `listProcedure`
      - `getProcedure`
    - Extra Data
      - `pattern`
      - `tactic`
      - `patternParent`
      - `patternTactics`
- name: Share
  description: |2+

    ### Queries
    - Initial Queries:
      - `listShare`
      - `getShare`
    - Queries available on a Share
      - `case`
      - `observables`
      - `tasks`
      - `organisation`

servers:
- url: /
paths:
  /api/v1/query:
    post:
      tags:
      - Query
      description: "\n### Overview\n\nThe Query API is the API used to search for\
        \ objects with filtering and sorting capabilities. It's an API introduced\
        \ by TheHive 4 and is optimized for the the new data model.\n\nTheHive comes\
        \ with a list of predefined search *Queries* like:\n\n- `listOrganisation`\n\
        - `listUser`\n- `listAlert`\n- `listCase`\n\nThe Query API request body should\
        \ be an array of *operations* of different types:\n\n- Selection: *Required*\n\
        \    - list of objects\n    - object by identifier\n- Filtering: *optional*\n\
        - Sorting: *optional*\n- Pagination: *optional*\n\n### Examples\n\nSimple\
        \ List:\n```json\n{\n    \"query\": [\n        {\n            \"_name\": \"\
        listOrganisation\"\n        }\n    ]\n}\n```\n\nList with filters:\n```json\n\
        {\n    \"query\": [\n        {\n            \"_name\": \"listOrganisation\"\
        \n        },\n        {\n            \"_name\": \"filter\",\n            \"\
        _eq\": {\n                \"_field\": \"name\",\n                \"_value\"\
        : \"admin\"\n            }\n        }\n    ]\n}\n```\n\nList with pagination:\n\
        \nList organisations called *admin*, sorted by ascendant `_updatedAt` value,\
        \ paginated to display the first 15 items\n```json\n{\n    \"query\": [\n\
        \        {\n            \"_name\": \"listOrganisation\"\n        },\n    \
        \    {\n            \"_name\": \"filter\",\n            \"_eq\": {\n     \
        \           \"_field\": \"name\",\n                \"_value\": \"admin\"\n\
        \            }\n        },\n        {\n            \"_name\": \"sort\",\n\
        \            \"_fields\": [\n                {\n                    \"_updatedAt\"\
        : \"asc\"\n                }\n            ]\n        },\n        {\n     \
        \       \"_name\": \"page\",\n            \"from\": 0,\n            \"to\"\
        : 15\n        }\n    ]\n}\n```\n\nChaining queries:\n\nList the observables\
        \ for the case with id `~1234`\n```json\n{\n    \"query\": [\n        {\n\
        \            \"_name\": \"getCase\",\n            \"idOrName\": \"~1234\"\n\
        \        },\n        {\n            \"_name\": \"observables\"\n        },\n\
        \        {\n            \"_name\": \"page\",\n            \"from\": 0,\n \
        \           \"to\": 15\n        }\n    ]\n}\n```\n\n### Filters\n\nAvailable\
        \ filters:\n\n- `_and`: `{\"_and\": [...other filters] }` \n- `_or`: `{\"\
        _or\": [...other filters] }` \n- `_not`: `` \n- `_any`: `` \n- `_lt`: `{\"\
        _lt\": {\"_field\": \"<field>\", \"_value\": <value>}` \n- `_gt`: `{\"_gt\"\
        : {\"_field\": \"<field>\", \"_value\": <value>}` \n- `_lte`: `{\"_lte\":\
        \ {\"_field\": \"<field>\", \"_value\": <value>}`\n- `_gte`: `{\"_gte\": {\"\
        _field\": \"<field>\", \"_value\": <value>}`\n- `_ne`: `{\"_ne\": {\"_field\"\
        : \"<field>\", \"_value\": <value>}` \n- `_eq`: `{\"_eq\": {\"_field\": \"\
        <field>\", \"_value\": <value>}` \n- `_is`: `{\"_is\": {\"_field\": \"<field>\"\
        , \"_value\": <value>}` - same as `_eq`\n- `_startsWith`: `{\"_startsWith\"\
        : {\"_field\": \"<field>\", \"_value\": \"<value>\"}` \n- `_endsWith`: `{\"\
        _endsWith\": {\"_field\": \"<field>\", \"_value\": \"<value>\"}`\n- `_id`:\
        \ `{\"_id\": \"~123\"}` \n- `_between`: `{\"_between\": {\"_field\": \"<field>\"\
        , \"from\": <from>, \"to\": <to>}}` \n- `_in`: `{\"_in\": {\"_field\": \"\
        <field>\", \"_values\": [<value1>, ...] }}` \n- `_contains`: `{\"_contains\"\
        : \"<field>\"}` if an object contains this field \n- `_like`: `{\"_like\"\
        : {\"_field\": \"<field>\", \"_value\": \"<value>\"}`\n- `_match`: `{\"_match\"\
        : {\"_field\": \"<field>\", \"_value\": \"<value>\"}`\n\n### Sorting\n\nUse\
        \ `{\"_name\": \"sort\", \"fields\": [ {\"<field>\": \"<direction>\" }, ...\
        \ ]}`\n\nWith `direction` being one of `asc` or `desc`\n\n### Pagination and\
        \ extraData\n\n- Simple pagination: `{\"_name\": \"page\", \"from\": 0, \"\
        to\": 30}`\n- Ask for extra data with the object:\n  `{\"_name\": \"page\"\
        , \"from\": 0, \"to\": 30, \"extraData\": [\"shareCount\", \"contributors\"\
        ] }`\n  \n  The `extraData` field of the object will contain a json object\
        \ with the selected fields.\n  The available `extraData` depends on the entity\
        \ being requested.\n\n\n"
      operationId: Query API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputQuery'
            example:
              query:
              - _name: listCase
              - from: 0
                to: 10
                _name: page
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {}
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case:
    post:
      tags:
      - Case
      description: Create a new case empty case. A Case Template can be used to provide
        tasks and custom fields
      operationId: Create case
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateCase'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{idOrName}:
    get:
      tags:
      - Case
      operationId: Get case
      parameters:
      - name: idOrName
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Case
      operationId: Delete case
      parameters:
      - name: idOrName
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Case
      operationId: Update case
      parameters:
      - name: idOrName
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateCase'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/_bulk:
    patch:
      tags:
      - Case
      operationId: Bulk update case
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateCase'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/_merge/{ids}:
    post:
      tags:
      - Case
      description: Create a new case by merging the provided cases. The similar observables
        will be merged
      operationId: Merge cases
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/alert/{alertId}:
    delete:
      tags:
      - Case
      operationId: Unlink alert from case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/observable/_merge:
    post:
      tags:
      - Case
      operationId: Merge similar observables of this case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputMergeCases'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/links:
    get:
      tags:
      - Case
      operationId: Get linked cases
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_OutputCase'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/customField/{cfId}:
    delete:
      tags:
      - Case
      operationId: Delete a custom field
      parameters:
      - name: cfId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/import:
    post:
      tags:
      - Case
      description: The file must be a .thar file
      operationId: Import Case from file
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - _json
              - file
              type: object
              properties:
                _json:
                  $ref: '#/components/schemas/InputImportCase'
                file:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/export:
    get:
      tags:
      - Case
      description: Export the case as a TheHive archive (.thar) file. The file can
        be used to import the Case in an other TheHive instance
      operationId: Export Case as archive
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      - name: password
        in: query
        description: A password to encrypt the file. Needs to be provided when importing
          the file
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Disposition:
              required: true
              schema:
                type: string
            Content-Length:
              required: true
              schema:
                type: integer
                format: int64
            Content-Type:
              required: true
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert:
    post:
      tags:
      - Alert
      operationId: Create Alert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateAlert'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAlert'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/{alertId}:
    get:
      tags:
      - Alert
      operationId: Get Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAlert'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Alert
      operationId: Delete Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Alert
      operationId: Update Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateAlert'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/_bulk:
    patch:
      tags:
      - Alert
      operationId: Bulk update Alert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateAlert'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/{alertId}/case:
    post:
      tags:
      - Alert
      operationId: Create Case from Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateCaseFromAlert'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/{alertId}/follow:
    post:
      tags:
      - Alert
      operationId: Follow Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/{alertId}/unfollow:
    post:
      tags:
      - Alert
      operationId: Unfollow Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/{alertId}/merge/{caseId}:
    post:
      tags:
      - Alert
      operationId: Merge Alert with Case
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/merge/_bulk:
    post:
      tags:
      - Alert
      operationId: Merge bulk Alerts with Case
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputAlertsMergeWithCase'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/delete/_bulk:
    post:
      tags:
      - Alert
      operationId: Delete Alert in bulk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
                    example: ~354
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/observable:
    post:
      tags:
      - Observable
      operationId: Create Observable in Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateObservable'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputObservable'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/{alertId}/observable:
    post:
      tags:
      - Observable
      operationId: Create Observable in Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateObservable'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputObservable'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/observable/{observableId}:
    get:
      tags:
      - Observable
      operationId: Get Observable
      parameters:
      - name: observableId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputObservable'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Observable
      operationId: Delete Observable
      parameters:
      - name: observableId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Observable
      operationId: Update Observable
      parameters:
      - name: observableId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateObservable'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/observable/_bulk:
    patch:
      tags:
      - Observable
      operationId: Update bulk of Observables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateObservable'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/task:
    post:
      tags:
      - Task
      operationId: Create Task in Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateTask'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputTask'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/task/{taskId}:
    get:
      tags:
      - Task
      operationId: Get Task
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputTask'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Task
      operationId: Delete Task
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Task
      operationId: Update Task
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateTask'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/task/_bulk:
    patch:
      tags:
      - Task
      operationId: Update bulk of Task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateTask'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/task/{taskId}/actionRequired:
    get:
      tags:
      - Task
      operationId: Task actions required
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map_Boolean'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/task/{taskId}/actionRequired/{orgId}:
    put:
      tags:
      - Task
      operationId: Set Task as required by organisation
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/task/{taskId}/actionDone/{orgId}:
    put:
      tags:
      - Task
      operationId: Set Task as done by organisation
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/task/{taskId}/log:
    post:
      tags:
      - Task Log
      operationId: Create Task Log
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateLog'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputLog'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/log/{logId}:
    delete:
      tags:
      - Task Log
      operationId: Delete Task Log
      parameters:
      - name: logId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Task Log
      operationId: Update Task Log
      parameters:
      - name: logId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateLog'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/log/{logId}/attachments:
    post:
      tags:
      - Task Log
      operationId: Add attachments to Task Log
      parameters:
      - name: logId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputAddAttachments'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/log/{logId}/attachments/{attachmentId}:
    delete:
      tags:
      - Task Log
      operationId: Delete attachment from Task Log
      parameters:
      - name: logId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/page:
    post:
      tags:
      - Page
      operationId: Create a Page
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreatePage'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputPage'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/page/{pageId or slug}:
    delete:
      tags:
      - Page
      operationId: Delete a Page
      parameters:
      - name: pageId or slug
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Page
      operationId: Update a Page
      parameters:
      - name: pageId or slug
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdatePage'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/page:
    post:
      tags:
      - Page
      operationId: Create a Page in a Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreatePage'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputPage'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/page/{pageId or slug}:
    delete:
      tags:
      - Page
      operationId: Delete a Page in a Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      - name: pageId or slug
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Page
      operationId: Update a Page in a Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      - name: pageId or slug
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdatePage'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/comment:
    post:
      tags:
      - Comment
      operationId: Create Comment in Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputComment'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputComment'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/{alertId}/comment:
    post:
      tags:
      - Comment
      operationId: Create Comment in Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputComment'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputComment'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/comment/{commentId}:
    delete:
      tags:
      - Comment
      operationId: Delete Comment
      parameters:
      - name: commentId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Comment
      operationId: Update Comment
      parameters:
      - name: commentId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputComment'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/timeline:
    get:
      tags:
      - Case
      - Timeline
      operationId: Get Case Timeline
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputTimeline'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/customEvent:
    post:
      tags:
      - Timeline
      operationId: Create Custom Event
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCustomEvent'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCustomEvent'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/customEvent/{eventId}:
    delete:
      tags:
      - Timeline
      operationId: Delete a Custom Event
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Timeline
      operationId: Update a Custom Event
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateCustomEvent'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/caseTemplate:
    post:
      tags:
      - CaseTemplate
      operationId: Create CaseTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateCaseTemplate'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCaseTemplate'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/caseTemplate/{caseTemplateNameOrId}:
    get:
      tags:
      - CaseTemplate
      operationId: Get CaseTemplate
      parameters:
      - name: caseTemplateNameOrId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCaseTemplate'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - CaseTemplate
      operationId: Delete CaseTemplate
      parameters:
      - name: caseTemplateNameOrId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - CaseTemplate
      operationId: Update CaseTemplate
      parameters:
      - name: caseTemplateNameOrId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateCaseTemplate'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/procedure:
    post:
      tags:
      - TTP
      operationId: Create Procedure for Case
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputProcedureWithCase'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputProcedure'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alert/{alertId}/procedure:
    post:
      tags:
      - TTP
      operationId: Create Procedure for Alert
      parameters:
      - name: alertId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputProcedure'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputProcedure'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/procedure/{procedureId}:
    delete:
      tags:
      - TTP
      operationId: Delete Procedure
      parameters:
      - name: procedureId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - TTP
      operationId: Update Procedure
      parameters:
      - name: procedureId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateProcedure'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/dashboard:
    post:
      tags:
      - Dashboard
      operationId: Create Dashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateDashboard'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputDashboard'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/dashboard/{dashboardId}:
    get:
      tags:
      - Dashboard
      operationId: Get Dashboard
      parameters:
      - name: dashboardId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputDashboard'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Dashboard
      operationId: Delete Dashboard
      parameters:
      - name: dashboardId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Dashboard
      operationId: Update Dashboard
      parameters:
      - name: dashboardId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateDashboard'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/attachments:
    post:
      tags:
      - Case
      operationId: Add Attachment to Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputAttachmentsFile'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAttachments'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/attachment/{attachmentId}/download:
    get:
      tags:
      - Case
      operationId: Download Attachment
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
            Content-Disposition:
              required: true
              schema:
                type: string
            Content-Length:
              required: true
              schema:
                type: integer
                format: int64
            Content-Transfer-Encoding:
              required: true
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/attachment/{attachmentId}:
    get:
      tags:
      - Case
      operationId: Get Attachment from case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
            Content-Length:
              required: true
              schema:
                type: integer
                format: int64
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Case
      operationId: Delete Attachment
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/log/{caseId}/attachment/{attachmentId}:
    get:
      tags:
      - Log
      operationId: Get Attachment from log
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              required: true
              schema:
                type: string
            Content-Length:
              required: true
              schema:
                type: integer
                format: int64
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/login:
    post:
      tags:
      - Login
      operationId: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
        required: true
      responses:
        '200':
          description: ''
          headers:
            Set-Cookie:
              required: false
              schema:
                type: array
                items:
                  type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputUser'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
  /api/v1/logout:
    get:
      tags:
      - Login
      operationId: Logout
      responses:
        '200':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
    post:
      tags:
      - Login
      operationId: Logout
      responses:
        '200':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
  /api/v1/auth/totp/get:
    get:
      tags:
      - TOTP
      operationId: Get TOTP secret
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputTOTPSecret'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/auth/totp/set:
    post:
      tags:
      - TOTP
      operationId: Set TOTP secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputTOTPCode'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/auth/totp/unset:
    post:
      tags:
      - TOTP
      operationId: Unset TOTP secret
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/auth/totp/unset/{user}:
    post:
      tags:
      - TOTP
      operationId: Unset TOTP secret for user
      parameters:
      - name: user
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/auth/local/passwordPolicy:
    get:
      tags:
      - Login
      operationId: Get current password policy
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsObject'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
  /api/v1/user/current:
    get:
      tags:
      - User
      operationId: Get current User info
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputUser'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user:
    post:
      tags:
      - User
      operationId: Create User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateUser'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputUser'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user/{userId}:
    get:
      tags:
      - User
      operationId: Get User
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputUser'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - User
      operationId: Lock User
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - User
      operationId: Update User
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateUser'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user/{userId}/force:
    delete:
      tags:
      - User
      operationId: Delete User
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      - name: organisation
        in: query
        required: false
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user/{userId}/organisations:
    put:
      tags:
      - User
      operationId: Set User Organisations
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputSetUserOrganisations'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputSetUserOrganisations'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user/{userId}/password/set:
    post:
      tags:
      - User
      operationId: Set user password
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputSetUserPassword'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user/{userId}/password/change:
    post:
      tags:
      - User
      operationId: Change user password
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputChangeUserPassword'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user/{userId}/key:
    get:
      tags:
      - User
      operationId: Get User api key
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - User
      operationId: Remove User api key
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user/{userId}/key/renew:
    post:
      tags:
      - User
      operationId: Renew User api key
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/user/{userId}/avatar:
    get:
      tags:
      - User
      operationId: Get User avatar
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/organisation:
    post:
      tags:
      - Organisation
      operationId: Create Organisation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateOrganisation'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputOrganisation'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/organisation/{orgId}:
    get:
      tags:
      - Organisation
      operationId: Get Organisation
      parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputOrganisation'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Organisation
      operationId: Update Organisation
      parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateOrganisation'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/organisation/{orgId}/avatar:
    get:
      tags:
      - Organisation
      operationId: Get Organisation avatar
      parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/organisation/{orgId}/link/{otherOrgId}:
    get:
      tags:
      - Organisation
      operationId: Unlink Organisations
      parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      - name: otherOrgId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    put:
      tags:
      - Organisation
      operationId: Link Organisations
      parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      - name: otherOrgId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputOrganisationLink'
        required: false
      responses:
        '201':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/organisation/{orgId}/links:
    get:
      tags:
      - Organisation
      operationId: List Organisation links
      parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputOrganisation'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    put:
      tags:
      - Organisation
      operationId: Bulk link Organisations
      parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputOrganisationBulkLink'
        required: true
      responses:
        '201':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/sharingProfile:
    get:
      tags:
      - Organisation
      operationId: List Sharing Profiles
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputSharingProfile'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/customField:
    get:
      tags:
      - CustomField
      operationId: List CustomFields
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputCustomField'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    post:
      tags:
      - CustomField
      operationId: Create CustomField
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCustomField'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCustomField'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/customField/{customFieldId}:
    delete:
      tags:
      - CustomField
      operationId: Delete CustomField
      parameters:
      - name: customFieldId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputDeleteCustomField'
        required: false
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - CustomField
      operationId: Update CustomField
      parameters:
      - name: customFieldId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateCustomField'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alertStatus:
    post:
      tags:
      - AlertStatus
      operationId: Create AlertStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateAlertStatus'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAlertStatus'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/alertStatus/{id}:
    delete:
      tags:
      - AlertStatus
      operationId: Delete AlertStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - AlertStatus
      operationId: Update AlertStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateAlertStatus'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/caseStatus:
    post:
      tags:
      - CaseStatus
      operationId: Create CaseStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateCaseStatus'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCaseStatus'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/caseStatus/{id}:
    delete:
      tags:
      - CaseStatus
      operationId: Delete CaseStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - CaseStatus
      operationId: Update CaseStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateCaseStatus'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/taxonomy:
    post:
      tags:
      - Taxonomy
      operationId: Create Taxonomy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputTaxonomy'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputTaxonomy'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/taxonomy/import-zip:
    post:
      tags:
      - Taxonomy
      operationId: Import from zip file
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputTaxonomyFile'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsObject'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/taxonomy/{taxonomyId}/activate:
    put:
      tags:
      - Taxonomy
      operationId: Activate Taxonomy
      parameters:
      - name: taxonomyId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/taxonomy/{taxonomyId}/deactivate:
    put:
      tags:
      - Taxonomy
      operationId: Deactivate Taxonomy
      parameters:
      - name: taxonomyId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/taxonomy/{taxonomyId}:
    get:
      tags:
      - Taxonomy
      operationId: Get Taxonomy
      parameters:
      - name: taxonomyId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputTaxonomy'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Taxonomy
      operationId: Delete Taxonomy
      parameters:
      - name: taxonomyId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/profile:
    post:
      tags:
      - Profile
      operationId: Create Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateProfile'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputProfile'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/profile/{profileId}:
    get:
      tags:
      - Profile
      operationId: Get Profile
      parameters:
      - name: profileId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputProfile'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Profile
      operationId: Delete Profile
      parameters:
      - name: profileId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Profile
      operationId: Update Profile
      parameters:
      - name: profileId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateProfile'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/shares:
    get:
      tags:
      - Case
      operationId: List Shares of Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputShare'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    post:
      tags:
      - Case
      operationId: Share a Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateShares'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputShare'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Case
      operationId: Unshare a Case
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputRemoveShares'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/task/{taskId}/shares:
    post:
      tags:
      - Task
      operationId: Share a Task
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateShare'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/observable/{observableId}/shares:
    post:
      tags:
      - Observable
      operationId: Share an Observable
      parameters:
      - name: observableId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCreateShare'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Observable
      operationId: Unshare an Observable
      parameters:
      - name: observableId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputRemoveShares'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/task/{taskId}/shares:
    get:
      tags:
      - Task
      operationId: List Shares of Task
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputShare'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/{caseId}/observable/{observableId}/shares:
    get:
      tags:
      - Observable
      operationId: List Shares of Observable
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      - name: observableId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputShare'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/share/{shareId}:
    delete:
      tags:
      - Case
      operationId: Remove a Share from Case
      parameters:
      - name: shareId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    patch:
      tags:
      - Share
      operationId: Update a Share
      parameters:
      - name: shareId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateShare'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/case/shares:
    delete:
      tags:
      - Share
      operationId: Delete Shares by shareId
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
                    example: ~354
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/task/{taskId}/shares:
    delete:
      tags:
      - Task
      operationId: Unshare a Task
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputRemoveShares'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/log/set/{packageName}/{level}:
    get:
      tags:
      - Admin
      operationId: Update Log Level
      parameters:
      - name: packageName
        in: path
        required: true
        schema:
          type: string
      - name: level
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InputLogLevel'
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/check/{name}/trigger:
    get:
      tags:
      - Admin
      operationId: Trigger integrity check
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/check/stats:
    get:
      tags:
      - Admin
      operationId: Get check stats
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsObject'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/index/status:
    get:
      tags:
      - Admin
      operationId: Get index status
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsObject'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/index/{name}/reindex:
    post:
      tags:
      - Admin
      description: This does not rebuild the index mapping
      operationId: Reindex data
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/index/{name}/rebuild:
    post:
      tags:
      - Admin
      description: This will recreate the index mapping and reindex all the data
      operationId: Rebuild index
      parameters:
      - name: name
        in: path
        description: use 'all' for all indexes
        required: true
        schema:
          type: string
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/schema/repair/{schemaName}:
    post:
      tags:
      - Admin
      operationId: Repair schema
      parameters:
      - name: schemaName
        in: path
        required: true
        schema:
          type: string
      - name: select
        in: query
        required: false
        schema:
          type: string
      - name: filter
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsObject'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/admin/schema/info/{schemaName}:
    post:
      tags:
      - Admin
      operationId: Schema info
      parameters:
      - name: schemaName
        in: path
        required: true
        schema:
          type: string
      - name: select
        in: query
        required: false
        schema:
          type: string
      - name: filter
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsObject'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/describe/{model}:
    get:
      tags:
      - Describe
      operationId: Describe a model
      parameters:
      - name: model
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputEntityDescription'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/describe/_all:
    get:
      tags:
      - Describe
      operationId: Describe all models
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map_OutputEntityDescription'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/search:
    post:
      tags:
      - Search
      operationId: Search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputSearch'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_JsObject'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/license/current:
    get:
      tags:
      - License
      operationId: Get current License
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputLicenseCurrent'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/license/{licenseId}:
    get:
      tags:
      - License
      operationId: Get License
      parameters:
      - name: licenseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputLicense'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/license:
    get:
      tags:
      - License
      operationId: List all licenses
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_OutputLicense'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    post:
      tags:
      - License
      operationId: Add License and Activate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputLicense'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/license/{licenseId}/activate:
    put:
      tags:
      - License
      operationId: Activate License
      parameters:
      - name: licenseId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/license/challenge:
    get:
      tags:
      - License
      operationId: Get Challenge
      responses:
        '200':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/catalog:
    post:
      tags:
      - Att&ck
      operationId: Create Catalog of TTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCatalogOfPattern'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCatalogOfPattern'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/catalog/{catalogId}:
    patch:
      tags:
      - Att&ck
      operationId: Delete a Catalog of TTP
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/pattern/import/attack:
    post:
      tags:
      - Att&ck
      operationId: Import MITRE Att&ck file
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - _json
              type: object
              properties:
                _json:
                  $ref: '#/components/schemas/InputPatternImportMitre'
                file:
                  type: string
                  format: binary
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsObject'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/pattern/{patternId}:
    get:
      tags:
      - Att&ck
      operationId: Get Pattern
      parameters:
      - name: patternId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputPattern'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
    delete:
      tags:
      - Att&ck
      operationId: Delete Pattern
      parameters:
      - name: patternId
        in: path
        required: true
        schema:
          type: string
          example: ~354
      responses:
        '204':
          description: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
  /api/v1/status/public:
    get:
      tags:
      - Status
      operationId: Get platform public status
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputPublicStatus'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
  /api/v1/status:
    get:
      tags:
      - Status
      operationId: Get platform status
      parameters:
      - name: verbose
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputStatus'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '401':
          description: AuthenticationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '403':
          description: AuthorizationError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '404':
          description: NotFoundError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        '500':
          description: GenericError
          content:
            application/json:
              schema:
                required:
                - type
                - message
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
      security:
      - Api Key: []
      - Basic: []
      - Session: []
components:
  schemas:
    DashboardStatus:
      type: string
      enum:
      - Private
      - Shared
      - Deleted
    InputAddAttachments:
      type: object
      properties:
        attachments:
          type: array
          items:
            type: string
            format: binary
    InputAlertStage:
      type: string
      enum:
      - New
      - InProgress
      - Closed
      - Imported
    InputAlertsMergeWithCase:
      required:
      - caseId
      type: object
      properties:
        caseId:
          type: string
          example: ~354
        alertIds:
          type: array
          items:
            type: string
            example: ~354
    InputAttachmentsFile:
      type: object
      properties:
        attachments:
          type: array
          items:
            type: string
            format: binary
    InputCaseStage:
      type: string
      enum:
      - New
      - InProgress
      - Closed
    InputCatalogOfPattern:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          maxLength: 1048576
        variant:
          type: string
    InputChangeUserPassword:
      required:
      - password
      - currentPassword
      type: object
      properties:
        password:
          type: string
        currentPassword:
          type: string
    InputComment:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          maxLength: 1048576
    InputCreateAlert:
      required:
      - type
      - source
      - sourceRef
      - title
      - description
      - date
      type: object
      properties:
        type:
          type: string
        source:
          type: string
        sourceRef:
          type: string
        externalLink:
          type: string
        title:
          type: string
        description:
          type: string
          maxLength: 1048576
        severity:
          type: integer
          minimum: 0
          exclusiveMinimum: true
          maximum: 4
        date:
          type: integer
          format: datetime_ms
          example: 1640000000000
        tags:
          type: array
          items:
            type: string
        flag:
          type: boolean
        tlp:
          type: integer
          minimum: 0
          maximum: 3
        pap:
          type: integer
          minimum: 0
          maximum: 3
        customFieldValue:
          type: array
          items:
            $ref: '#/components/schemas/InputCustomFieldValue'
        summary:
          type: string
          maxLength: 1048576
        status:
          type: string
        caseTemplate:
          type: string
    InputCreateAlertStatus:
      required:
      - value
      - stage
      type: object
      properties:
        value:
          type: string
        stage:
          $ref: '#/components/schemas/InputAlertStage'
        order:
          type: integer
        description:
          type: string
          maxLength: 1048576
        colour:
          type: string
          pattern: ^#[0-9a-fA-F]{6,6}|$
    InputCreateCase:
      required:
      - title
      - description
      type: object
      properties:
        title:
          type: string
        description:
          type: string
          description: Description of the case, supports markdown
          maxLength: 1048576
        severity:
          type: integer
          default: 2
          minimum: 0
          exclusiveMinimum: true
          maximum: 4
        startDate:
          type: integer
          format: datetime_ms
          default: now()
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        tags:
          type: array
          items:
            type: string
        flag:
          type: boolean
          default: false
        tlp:
          type: integer
          default: 2
          minimum: 0
          maximum: 3
        pap:
          type: integer
          default: 2
          minimum: 0
          maximum: 3
        status:
          type: string
          default: New
        summary:
          type: string
          maxLength: 1048576
        user:
          type: string
          description: User to assign the case to
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/InputCustomFieldValue'
        caseTemplate:
          type: string
          description: Name or id of the Case Template to use
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/InputCreateTask'
          description: Additional tasks to create
        sharingParameters:
          type: array
          items:
            $ref: '#/components/schemas/InputShare'
        taskRule:
          type: string
        observableRule:
          type: string
    InputCreateCaseFromAlert:
      type: object
      properties:
        caseTemplate:
          type: string
        sharingParameters:
          type: array
          items:
            $ref: '#/components/schemas/InputShare'
        taskRule:
          type: string
        observableRule:
          type: string
    InputCreateCaseStatus:
      required:
      - value
      - stage
      type: object
      properties:
        value:
          type: string
        stage:
          $ref: '#/components/schemas/InputCaseStage'
        order:
          type: integer
        description:
          type: string
        colour:
          type: string
          pattern: ^#[0-9a-fA-F]{6,6}|$
    InputCreateCaseTemplate:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        titlePrefix:
          type: string
        description:
          type: string
          maxLength: 1048576
        severity:
          type: integer
          minimum: 0
          exclusiveMinimum: true
          maximum: 4
        tags:
          type: array
          items:
            type: string
        flag:
          type: boolean
        tlp:
          type: integer
          minimum: 0
          maximum: 3
        pap:
          type: integer
          minimum: 0
          maximum: 3
        summary:
          type: string
          maxLength: 1048576
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/InputCreateTask'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/InputCustomFieldValue'
    InputCreateDashboard:
      required:
      - title
      - description
      - status
      - definition
      type: object
      properties:
        title:
          type: string
        description:
          type: string
          maxLength: 1048576
        status:
          $ref: '#/components/schemas/DashboardStatus'
        definition:
          $ref: '#/components/schemas/JsObject'
        version:
          type: integer
    InputCreateLog:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          maxLength: 1048576
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        includeInTimeline:
          type: integer
          format: datetime_ms
          example: 1640000000000
    InputCreateObservable:
      required:
      - dataType
      type: object
      properties:
        dataType:
          type: string
        data:
          type: string
          description: Data for the observable when dataType is not of type file
          minLength: 1
          maxLength: 2048
        message:
          type: string
          maxLength: 1048576
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        tlp:
          type: integer
          minimum: 0
          maximum: 3
        pap:
          type: integer
          minimum: 0
          maximum: 3
        tags:
          type: array
          items:
            type: string
        ioc:
          type: boolean
        sighted:
          type: boolean
        sightedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        ignoreSimilarity:
          type: boolean
        isZip:
          type: boolean
        zipPassword:
          type: string
    InputCreateOrganisation:
      required:
      - name
      - description
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          maxLength: 1048576
        taskRule:
          type: string
        observableRule:
          type: string
        locked:
          type: boolean
    InputCreatePage:
      required:
      - title
      - content
      - category
      type: object
      properties:
        title:
          type: string
        content:
          type: string
          maxLength: 1048576
        order:
          type: integer
        category:
          type: string
    InputCreateProfile:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        permissions:
          type: array
          items:
            type: string
    InputCreateShare:
      type: object
      properties:
        organisations:
          type: array
          items:
            type: string
            example: ~354
    InputCreateShares:
      type: object
      properties:
        shares:
          type: array
          items:
            $ref: '#/components/schemas/InputShare'
    InputCreateTask:
      required:
      - title
      type: object
      properties:
        title:
          type: string
        group:
          type: string
          default: default
        description:
          type: string
          maxLength: 1048576
        status:
          type: string
          default: Waiting
        flag:
          type: boolean
          default: false
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        order:
          type: integer
          default: 0
        dueDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        assignee:
          type: string
    InputCreateUser:
      required:
      - login
      - name
      - profile
      type: object
      properties:
        login:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        profile:
          type: string
        organisation:
          type: string
        type:
          type: string
    InputCustomEvent:
      required:
      - date
      - title
      type: object
      properties:
        date:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        title:
          type: string
        description:
          type: string
          maxLength: 1048576
    InputCustomField:
      required:
      - name
      - group
      - description
      - type
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        group:
          type: string
        description:
          type: string
          maxLength: 1048576
        type:
          type: string
        mandatory:
          type: boolean
        options:
          type: array
          items: {}
    InputCustomFieldValue:
      required:
      - name
      - value
      type: object
      properties:
        name:
          type: string
        value: {}
        order:
          type: integer
    InputDeleteCustomField:
      type: object
      properties:
        force:
          type: boolean
    InputEntry:
      required:
      - value
      type: object
      properties:
        value:
          type: string
        expanded:
          type: string
          maxLength: 1048576
        colour:
          type: string
          pattern: ^#[0-9a-fA-F]{6,6}|$
        description:
          type: string
          maxLength: 1048576
        numerical_value:
          type: integer
    InputImportCase:
      required:
      - password
      type: object
      properties:
        password:
          type: string
          description: Password to read the archive
        sharingParameters:
          type: array
          items:
            $ref: '#/components/schemas/InputShare'
        taskRule:
          type: string
        observableRule:
          type: string
    InputLicense:
      required:
      - license
      type: object
      properties:
        license:
          type: string
    InputLogLevel:
      type: string
      enum:
      - ALL
      - TRACE
      - DEBUG
      - INFO
      - WARN
      - ERROR
      - 'OFF'
    InputOrganisationBulkLink:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationLink'
    InputOrganisationLink:
      type: object
      properties:
        linkType:
          type: string
        otherLinkType:
          type: string
    InputPatternImportMitre:
      required:
      - catalog
      type: object
      properties:
        url:
          type: string
        catalog:
          type: string
        variant:
          type: string
    InputPredicate:
      required:
      - value
      type: object
      properties:
        value:
          type: string
        expanded:
          type: string
          maxLength: 1048576
        exclusive:
          type: boolean
        description:
          type: string
          maxLength: 1048576
        colour:
          type: string
          pattern: ^#[0-9a-fA-F]{6,6}|$
    InputProcedure:
      required:
      - occurDate
      - tactic
      - patternId
      type: object
      properties:
        description:
          type: string
          maxLength: 1048576
        occurDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        tactic:
          type: string
        patternId:
          type: string
    InputProcedureWithCase:
      required:
      - occurDate
      - tactic
      - caseId
      - patternId
      type: object
      properties:
        description:
          type: string
          maxLength: 1048576
        occurDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        tactic:
          type: string
        caseId:
          type: string
        patternId:
          type: string
    InputQuery:
      type: object
      properties:
        query:
          type: array
          items:
            $ref: '#/components/schemas/InputQueryNamedOperation'
    InputQueryFilterOperation:
      type: object
      properties:
        _eq:
          $ref: '#/components/schemas/JsObject'
    InputQueryGenericOperation:
      required:
      - _name
      type: object
      properties:
        _name:
          type: string
    InputQueryNamedOperation:
      oneOf:
      - $ref: '#/components/schemas/InputQueryFilterOperation'
      - $ref: '#/components/schemas/InputQueryGenericOperation'
      - $ref: '#/components/schemas/InputQueryPagingOperation'
      - $ref: '#/components/schemas/InputQuerySortOperation'
      discriminator:
        propertyName: _name
        mapping:
          _sort: '#/components/schemas/InputQuerySortOperation'
          _filter: '#/components/schemas/InputQueryFilterOperation'
          page: '#/components/schemas/InputQueryPagingOperation'
          <other>: '#/components/schemas/InputQueryGenericOperation'
    InputQueryPagingOperation:
      required:
      - from
      - to
      type: object
      properties:
        from:
          type: integer
        to:
          type: integer
    InputQuerySortOperation:
      type: object
      properties:
        _fields:
          type: array
          items:
            $ref: '#/components/schemas/JsObject'
    InputRemoveShares:
      type: object
      properties:
        organisations:
          type: array
          items:
            type: string
            example: ~354
    InputSearch:
      required:
      - query
      type: object
      properties:
        query:
          type: string
        from:
          type: integer
          default: 0
        to:
          type: integer
          default: 10
    InputSetUserOrganisations:
      type: object
      properties:
        organisations:
          type: array
          items:
            $ref: '#/components/schemas/InputUserOrganisation'
    InputSetUserPassword:
      required:
      - password
      type: object
      properties:
        password:
          type: string
    InputShare:
      required:
      - organisation
      type: object
      properties:
        organisation:
          type: string
        share:
          type: boolean
        profile:
          type: string
        taskRule:
          type: string
        observableRule:
          type: string
    InputTOTPCode:
      required:
      - code
      - secret
      type: object
      properties:
        code:
          type: integer
        secret:
          type: string
    InputTaxonomy:
      required:
      - namespace
      - description
      - version
      type: object
      properties:
        namespace:
          type: string
        description:
          type: string
          maxLength: 1048576
        version:
          type: integer
        exclusive:
          type: boolean
        predicates:
          type: array
          items:
            $ref: '#/components/schemas/InputPredicate'
        values:
          type: array
          items:
            $ref: '#/components/schemas/InputValue'
    InputTaxonomyFile:
      required:
      - file
      type: object
      properties:
        file:
          type: string
          format: binary
    InputUpdateAlert:
      type: object
      properties:
        type:
          type: string
        source:
          type: string
        sourceRef:
          type: string
        externalLink:
          type: string
        title:
          type: string
        description:
          type: string
          maxLength: 1048576
        severity:
          type: integer
          minimum: 0
          exclusiveMinimum: true
          maximum: 4
        date:
          type: integer
          format: datetime_ms
          example: 1640000000000
        lastSyncDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        tags:
          type: array
          items:
            type: string
        tlp:
          type: integer
          minimum: 0
          maximum: 3
        pap:
          type: integer
          minimum: 0
          maximum: 3
        follow:
          type: boolean
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/InputCustomFieldValue'
        status:
          type: string
        summary:
          type: string
          maxLength: 1048576
    InputUpdateAlertStatus:
      type: object
      properties:
        order:
          type: integer
        description:
          type: string
          maxLength: 1048576
        colour:
          type: string
          pattern: ^#[0-9a-fA-F]{6,6}|$
    InputUpdateCase:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
          maxLength: 1048576
        severity:
          type: integer
          minimum: 0
          exclusiveMinimum: true
          maximum: 4
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        tags:
          type: array
          items:
            type: string
        flag:
          type: boolean
        tlp:
          type: integer
          minimum: 0
          maximum: 3
        pap:
          type: integer
          minimum: 0
          maximum: 3
        status:
          type: string
        summary:
          type: string
          maxLength: 1048576
        assignee:
          type: string
        impactStatus:
          type: string
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/InputCustomFieldValue'
        taskRule:
          type: string
        observableRule:
          type: string
    InputUpdateCaseStatus:
      type: object
      properties:
        order:
          type: integer
        description:
          type: string
          maxLength: 1048576
        colour:
          type: string
          pattern: ^#[0-9a-fA-F]{6,6}|$
    InputUpdateCaseTemplate:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        titlePrefix:
          type: string
        description:
          type: string
          maxLength: 1048576
        severity:
          type: integer
          minimum: 0
          exclusiveMinimum: true
          maximum: 4
        tags:
          type: array
          items:
            type: string
        flag:
          type: boolean
        tlp:
          type: integer
          minimum: 0
          maximum: 3
        pap:
          type: integer
          minimum: 0
          maximum: 3
        summary:
          type: string
          maxLength: 1048576
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/InputCustomFieldValue'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/InputCreateTask'
    InputUpdateCatalogOfPattern:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          maxLength: 1048576
        variant:
          type: string
    InputUpdateCustomEvent:
      type: object
      properties:
        date:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        title:
          type: string
        description:
          type: string
          maxLength: 1048576
    InputUpdateCustomField:
      type: object
      properties:
        displayName:
          type: string
        group:
          type: string
        description:
          type: string
          maxLength: 1048576
        type:
          type: string
        options:
          type: array
          items: {}
        mandatory:
          type: boolean
    InputUpdateDashboard:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
          maxLength: 1048576
        definition:
          $ref: '#/components/schemas/JsObject'
        status:
          $ref: '#/components/schemas/DashboardStatus'
        version:
          type: integer
    InputUpdateLog:
      type: object
      properties:
        message:
          type: string
          maxLength: 1048576
        includeInTimeline:
          type: integer
          format: datetime_ms
          example: 1640000000000
    InputUpdateObservable:
      type: object
      properties:
        dataType:
          type: string
        message:
          type: string
          maxLength: 1048576
        tlp:
          type: integer
          minimum: 0
          maximum: 3
        pap:
          type: integer
          minimum: 0
          maximum: 3
        tags:
          type: array
          items:
            type: string
        ioc:
          type: boolean
        sighted:
          type: boolean
        sightedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        ignoreSimilarity:
          type: boolean
    InputUpdateOrganisation:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          maxLength: 1048576
        taskRule:
          type: string
        observableRule:
          type: string
        locked:
          type: boolean
        avatar:
          type: string
    InputUpdatePage:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
          maxLength: 1048576
        order:
          type: integer
        category:
          type: string
    InputUpdateProcedure:
      type: object
      properties:
        description:
          type: string
          maxLength: 1048576
        occurDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
    InputUpdateProfile:
      type: object
      properties:
        name:
          type: string
        permissions:
          type: array
          items:
            type: string
    InputUpdateShare:
      required:
      - profile
      type: object
      properties:
        profile:
          type: string
    InputUpdateTask:
      type: object
      properties:
        title:
          type: string
        group:
          type: string
        description:
          type: string
          maxLength: 1048576
        status:
          type: string
        flag:
          type: boolean
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        order:
          type: integer
        dueDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        assignee:
          type: string
    InputUpdateUser:
      type: object
      properties:
        name:
          type: string
        organisation:
          type: string
          description: When updating the profile, use this field to determine the
            organisation to update
        profile:
          type: string
          description: Requires admin permission to update this field
        locked:
          type: boolean
          description: Requires admin permission to update this field
        avatar:
          type: string
        email:
          type: string
        defaultOrganisation:
          type: string
    InputUserOrganisation:
      required:
      - organisation
      - profile
      type: object
      properties:
        organisation:
          type: string
        profile:
          type: string
        default:
          type: boolean
    InputValue:
      required:
      - predicate
      type: object
      properties:
        predicate:
          type: string
        entry:
          type: array
          items:
            $ref: '#/components/schemas/InputEntry'
    JsObject:
      type: object
    List_JsObject:
      oneOf:
      - $ref: '#/components/schemas/Nil'
      - type: array
        items:
          $ref: '#/components/schemas/JsObject'
    List_OutputCase:
      oneOf:
      - $ref: '#/components/schemas/Nil'
      - type: array
        items:
          $ref: '#/components/schemas/OutputCase'
    List_OutputLicense:
      oneOf:
      - $ref: '#/components/schemas/Nil'
      - type: array
        items:
          $ref: '#/components/schemas/OutputLicense'
    LoginInput:
      required:
      - user
      - password
      type: object
      properties:
        user:
          type: string
        password:
          type: string
        organisation:
          type: string
        code:
          type: string
    Map_Boolean:
      type: object
      additionalProperties:
        type: boolean
    Map_Int:
      type: object
      additionalProperties:
        type: integer
    Map_JsObject:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/JsObject'
    Map_OutputEntityDescription:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/OutputEntityDescription'
    Map_OutputLicenseQuota:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/OutputLicenseQuota'
    Nil:
      type: object
    OrganisationLink:
      required:
      - toOrganisation
      - linkType
      - otherLinkType
      type: object
      properties:
        toOrganisation:
          type: string
          example: ~354
        linkType:
          type: string
        otherLinkType:
          type: string
    OutputAlert:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - type
      - source
      - sourceRef
      - title
      - description
      - severity
      - date
      - tlp
      - pap
      - follow
      - observableCount
      - status
      - stage
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        type:
          type: string
        source:
          type: string
        sourceRef:
          type: string
        externalLink:
          type: string
        title:
          type: string
        description:
          type: string
        severity:
          type: integer
        date:
          type: integer
          format: datetime_ms
          example: 1640000000000
        tags:
          type: array
          items:
            type: string
        tlp:
          type: integer
        pap:
          type: integer
        follow:
          type: boolean
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/OutputCustomFieldValue'
        caseTemplate:
          type: string
        observableCount:
          type: integer
          format: int64
        caseId:
          type: string
        status:
          type: string
        stage:
          type: string
        summary:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputAlertStatus:
      required:
      - _id
      - _type
      - _createdAt
      - _createdBy
      - value
      - stage
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _createdBy:
          type: string
        value:
          type: string
        stage:
          type: string
        order:
          type: integer
        description:
          type: string
        colour:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputAttachment:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - name
      - size
      - contentType
      - id
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        name:
          type: string
        hashes:
          type: array
          items:
            type: string
        size:
          type: integer
          format: int64
        contentType:
          type: string
        id:
          type: string
    OutputAttachments:
      type: object
      properties:
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/OutputAttachment'
    OutputCase:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - number
      - title
      - description
      - severity
      - startDate
      - flag
      - tlp
      - pap
      - status
      - stage
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        number:
          type: integer
          description: An incremental number to reference the case
        title:
          type: string
        description:
          type: string
        severity:
          type: integer
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        tags:
          type: array
          items:
            type: string
        flag:
          type: boolean
        tlp:
          type: integer
        pap:
          type: integer
        status:
          type: string
        stage:
          type: string
          description: The value of the stage depends on the status of the case. Can
            be one of 'New' 'InProgress' or 'Closed'
        summary:
          type: string
        impactStatus:
          type: string
        assignee:
          type: string
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/OutputCustomFieldValue'
        userPermissions:
          type: array
          items:
            type: string
          description: A list of permissions the current user has access on the case.
            This depends on the profile of the user and the sharing of the Case
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputCaseStatus:
      required:
      - _id
      - _type
      - _createdAt
      - _createdBy
      - value
      - stage
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _createdBy:
          type: string
        value:
          type: string
        stage:
          type: string
        order:
          type: integer
        description:
          type: string
        colour:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputCaseTemplate:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - name
      - displayName
      - flag
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        name:
          type: string
        displayName:
          type: string
        titlePrefix:
          type: string
        description:
          type: string
        severity:
          type: integer
        tags:
          type: array
          items:
            type: string
        flag:
          type: boolean
        tlp:
          type: integer
        pap:
          type: integer
        summary:
          type: string
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/OutputCustomFieldValue'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/OutputTask'
    OutputCatalogOfPattern:
      required:
      - _id
      - _type
      - createdBy
      - createdAt
      - name
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        createdBy:
          type: string
        createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        name:
          type: string
        description:
          type: string
        variant:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputComment:
      required:
      - _id
      - _type
      - createdBy
      - createdAt
      - message
      - isEdited
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        createdBy:
          type: string
        createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        message:
          type: string
        isEdited:
          type: boolean
    OutputCustomEvent:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - date
      - title
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        date:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        title:
          type: string
        description:
          type: string
    OutputCustomField:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - name
      - displayName
      - group
      - description
      - type
      - mandatory
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        name:
          type: string
        displayName:
          type: string
        group:
          type: string
        description:
          type: string
        type:
          type: string
        options:
          type: array
          items: {}
        mandatory:
          type: boolean
    OutputCustomFieldValue:
      required:
      - _id
      - name
      - description
      - type
      - value
      - order
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        value: {}
        order:
          type: integer
    OutputDashboard:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - title
      - description
      - status
      - definition
      - writable
      - version
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        title:
          type: string
        description:
          type: string
        status:
          type: string
        definition:
          $ref: '#/components/schemas/JsObject'
        writable:
          type: boolean
        version:
          type: integer
    OutputEntityDescription:
      required:
      - label
      - path
      - initialQuery
      type: object
      properties:
        label:
          type: string
        path:
          type: string
        initialQuery:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/OutputPropertyDescription'
    OutputLicense:
      required:
      - _id
      - _createdAt
      - _createdBy
      - _type
      - id
      - customer
      - plan
      - kind
      - validFrom
      - expiresAt
      - current
      - quotas
      type: object
      properties:
        _id:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _createdBy:
          type: string
        _type:
          type: string
        id:
          type: string
        customer:
          type: string
        plan:
          type: string
        kind:
          type: string
        validFrom:
          type: integer
          format: datetime_ms
          example: 1640000000000
        expiresAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        current:
          type: boolean
        capabilities:
          type: array
          items:
            type: string
        quotas:
          $ref: '#/components/schemas/Map_Int'
    OutputLicenseCurrent:
      oneOf:
      - $ref: '#/components/schemas/OutputLicenseCurrentError'
      - $ref: '#/components/schemas/OutputLicenseCurrentOk'
    OutputLicenseCurrentError:
      required:
      - error
      - fallback
      type: object
      properties:
        error:
          type: string
        fallback:
          $ref: '#/components/schemas/OutputLicense'
    OutputLicenseCurrentOk:
      required:
      - license
      type: object
      properties:
        license:
          $ref: '#/components/schemas/OutputLicense'
    OutputLicenseQuota:
      required:
      - quota
      type: object
      properties:
        current:
          type: integer
        quota:
          type: integer
    OutputLicenseStatus:
      required:
      - id
      - customer
      - instance
      - plan
      - kind
      - validFrom
      - expiresAt
      - isValid
      - quotas
      type: object
      properties:
        id:
          type: string
        customer:
          type: string
        instance:
          type: string
        plan:
          type: string
        kind:
          type: string
        validFrom:
          type: integer
          format: datetime_ms
          example: 1640000000000
        expiresAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        capabilities:
          type: array
          items:
            type: string
        isValid:
          type: boolean
        error:
          type: string
        quotas:
          $ref: '#/components/schemas/Map_OutputLicenseQuota'
    OutputLog:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - message
      - date
      - owner
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        message:
          type: string
        date:
          type: integer
          format: datetime_ms
          example: 1640000000000
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/OutputAttachment'
        owner:
          type: string
        includeInTimeline:
          type: integer
          format: datetime_ms
          example: 1640000000000
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputMergeCases:
      required:
      - untouched
      - updated
      - deleted
      type: object
      properties:
        untouched:
          type: integer
          description: Number of observables left untouched
        updated:
          type: integer
          description: Number of observables updated
        deleted:
          type: integer
          description: Number of observables deleted
    OutputObservable:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - dataType
      - startDate
      - tlp
      - pap
      - ioc
      - sighted
      - reports
      - extraData
      - ignoreSimilarity
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        dataType:
          type: string
        data:
          type: string
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        attachment:
          $ref: '#/components/schemas/OutputAttachment'
        tlp:
          type: integer
        pap:
          type: integer
        tags:
          type: array
          items:
            type: string
        ioc:
          type: boolean
        sighted:
          type: boolean
        sightedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        reports:
          $ref: '#/components/schemas/JsObject'
        message:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
        ignoreSimilarity:
          type: boolean
    OutputOrganisation:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - name
      - description
      - taskRule
      - observableRule
      - locked
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        name:
          type: string
        description:
          type: string
        taskRule:
          type: string
        observableRule:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationLink'
        avatar:
          type: string
        locked:
          type: boolean
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputOrganisationProfile:
      required:
      - organisationId
      - organisation
      - profile
      type: object
      properties:
        organisationId:
          type: string
        organisation:
          type: string
        profile:
          type: string
        avatar:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationLink'
    OutputPage:
      required:
      - _id
      - id
      - createdBy
      - createdAt
      - title
      - content
      - _type
      - slug
      - order
      - category
      type: object
      properties:
        _id:
          type: string
        id:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        title:
          type: string
        content:
          type: string
        _type:
          type: string
        slug:
          type: string
        order:
          type: integer
        category:
          type: string
    OutputPattern:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - patternId
      - name
      - url
      - patternType
      - revoked
      - remoteSupport
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        patternId:
          type: string
        name:
          type: string
        description:
          type: string
        tactics:
          type: array
          items:
            type: string
        url:
          type: string
        patternType:
          type: string
        capecId:
          type: string
        capecUrl:
          type: string
        revoked:
          type: boolean
        dataSources:
          type: array
          items:
            type: string
        defenseBypassed:
          type: array
          items:
            type: string
        detection:
          type: string
        permissionsRequired:
          type: array
          items:
            type: string
        platforms:
          type: array
          items:
            type: string
        remoteSupport:
          type: boolean
        systemRequirements:
          type: array
          items:
            type: string
        version:
          type: string
        catalog:
          $ref: '#/components/schemas/OutputCatalogOfPattern'
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputProcedure:
      required:
      - _id
      - _createdAt
      - _createdBy
      - occurDate
      - tactic
      - tacticLabel
      - extraData
      type: object
      properties:
        _id:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _createdBy:
          type: string
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedBy:
          type: string
        description:
          type: string
        occurDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        patternId:
          type: string
        patternName:
          type: string
        tactic:
          type: string
        tacticLabel:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputProfile:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - name
      - editable
      - isAdmin
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        name:
          type: string
        permissions:
          type: array
          items:
            type: string
        editable:
          type: boolean
        isAdmin:
          type: boolean
    OutputPropertyDescription:
      required:
      - name
      - type
      - indexType
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        values:
          type: array
          items: {}
        labels:
          type: array
          items:
            type: string
        indexType:
          type: string
    OutputPublicStatus:
      required:
      - sso
      - version
      type: object
      properties:
        sso:
          type: boolean
        version:
          type: string
    OutputSetUserOrganisations:
      type: object
      properties:
        organisations:
          type: array
          items:
            $ref: '#/components/schemas/OutputUserOrganisation'
    OutputShare:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - caseId
      - profileName
      - organisationName
      - owner
      - taskRule
      - observableRule
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        caseId:
          type: string
        profileName:
          type: string
        organisationName:
          type: string
        owner:
          type: boolean
        taskRule:
          type: string
        observableRule:
          type: string
    OutputSharingProfile:
      required:
      - name
      - description
      - autoShare
      - editable
      - permissionProfile
      - taskRule
      - observableRule
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        autoShare:
          type: boolean
        editable:
          type: boolean
        permissionProfile:
          type: string
        taskRule:
          type: string
        observableRule:
          type: string
    OutputStatus:
      required:
      - version
      - connectors
      - config
      - license
      type: object
      properties:
        version:
          type: string
        connectors:
          $ref: '#/components/schemas/Map_JsObject'
        config:
          $ref: '#/components/schemas/JsObject'
        license:
          $ref: '#/components/schemas/OutputLicenseStatus'
        cluster:
          $ref: '#/components/schemas/JsObject'
        schemaStatus:
          type: array
          items:
            $ref: '#/components/schemas/JsObject'
          description: Filled when verbose
    OutputTOTPSecret:
      required:
      - secret
      - uri
      type: object
      properties:
        secret:
          type: string
        uri:
          type: string
    OutputTag:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - namespace
      - predicate
      - colour
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        namespace:
          type: string
        predicate:
          type: string
        value:
          type: string
        description:
          type: string
        colour:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputTask:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - title
      - group
      - status
      - flag
      - order
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        title:
          type: string
        group:
          type: string
        description:
          type: string
        status:
          type: string
        flag:
          type: boolean
        startDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        assignee:
          type: string
        order:
          type: integer
        dueDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputTaxonomy:
      required:
      - _id
      - _type
      - _createdBy
      - _createdAt
      - namespace
      - description
      - version
      - extraData
      type: object
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        namespace:
          type: string
        description:
          type: string
        version:
          type: integer
        tags:
          type: array
          items:
            $ref: '#/components/schemas/OutputTag'
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputTimeline:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/OutputTimelineEvent'
    OutputTimelineEvent:
      required:
      - date
      - kind
      - entity
      - entityId
      - details
      type: object
      properties:
        date:
          type: integer
          format: datetime_ms
          example: 1640000000000
        kind:
          type: string
        entity:
          type: string
        entityId:
          type: string
          example: ~354
        details:
          $ref: '#/components/schemas/JsObject'
        endDate:
          type: integer
          format: datetime_ms
          example: 1640000000000
    OutputUser:
      required:
      - _id
      - _createdBy
      - _createdAt
      - login
      - name
      - hasKey
      - hasPassword
      - hasMFA
      - locked
      - profile
      - organisation
      - type
      - extraData
      type: object
      properties:
        _id:
          type: string
        _createdBy:
          type: string
        _updatedBy:
          type: string
        _createdAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        _updatedAt:
          type: integer
          format: datetime_ms
          example: 1640000000000
        login:
          type: string
        name:
          type: string
        email:
          type: string
        hasKey:
          type: boolean
        hasPassword:
          type: boolean
        hasMFA:
          type: boolean
        locked:
          type: boolean
        profile:
          type: string
        permissions:
          type: array
          items:
            type: string
        organisation:
          type: string
        avatar:
          type: string
        organisations:
          type: array
          items:
            $ref: '#/components/schemas/OutputOrganisationProfile'
        type:
          type: string
        defaultOrganisation:
          type: string
        extraData:
          $ref: '#/components/schemas/JsObject'
    OutputUserOrganisation:
      required:
      - organisation
      - profile
      - default
      type: object
      properties:
        organisation:
          type: string
        profile:
          type: string
        default:
          type: boolean
  securitySchemes:
    Api Key:
      type: http
      description: |2

        The Api key can be generated and retrieved from a user settings. It then needs to be provided in the request headers as a bearer token.

        With curl for instance:
        ```
        curl -H 'Authorization: Bearer <API_KEY>' ...
        ```
      name: Api Key
      scheme: bearer
    Basic:
      type: http
      description: |2

        Use the user login and password passed in the Authorization header of the request.

        With curl for instance:
        ```
        curl -u <login>:<password> ...
        ```
      name: Basic Auth
      scheme: basic
    Session:
      type: apiKey
      description: |2

        This will retrieve the user information from the cookies. This is used by the frontend of TheHive and not suited for bots and automation.
        A Cookie is set in the browser after a user logs in (with login/password or SSO) with the name `THEHIVE-SESSION`
      name: THEHIVE-SESSION
      in: cookie
x-tagGroups:
- name: Standard Features
  tags:
  - Query
- name: Case Management
  tags:
  - Case
  - Alert
  - Task
  - Observable
  - Comment
  - Timeline
  - TTP
  - Task Log
  - Share
- name: User Management
  tags:
  - Organisation
  - User
  - Profile
- name: Entities
  tags:
  - CustomField
  - AlertStatus
  - CaseStatus
  - Taxonomy
  - CaseTemplate
- name: Other
  tags:
  - Authenticated
  - Admin
  - License
  - Page
  - Login
  - Att&ck
  - Log
  - Search
  - Describe
  - Status
  - TOTP
  - Dashboard
